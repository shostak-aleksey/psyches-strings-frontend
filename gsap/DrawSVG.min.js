// Menu Color Change
$(function () {
  //Menu Tab
  // Remove Blue, so hover effect can happen across all three choices
  // Readd blue if page is not changed
  if ($('a').hasClass('active_tab')) {
    $('#tabs').mouseover(function () {
      $('a').removeClass('active_tab');
    });
    $('#tabs').mouseout(function () {
      //Is What page
      if (window.location.href.indexOf('index.html') > -1) {
        $('#whatTab').addClass('active_tab');
      }
      // Is How Page
      else if (window.location.href.indexOf('how.html') > -1) {
        $('#howTab').addClass('active_tab');
      }
      //Is Who Page
      else if (window.location.href.indexOf('who.html') > -1) {
        $('#whoTab').addClass('active_tab');
      } else {
        console.log('Wrong href');
      }
    });
  } else {
    console.log('Has no class');
  }
});

//https://jsfiddle.net/cse_tushar/Dxtyu/141/ adapted
$(document).ready(function () {
  $(document).on('scroll', onScroll);

  //smoothscroll
  $('a[href^="#"]').on('click', function (e) {
    e.preventDefault();
    $(document).off('scroll');

    $('a').each(function () {
      $(this).removeClass('active');
    });
    $(this).addClass('active');

    var target = this.hash,
      menu = target;
    $target = $(target);
    $('html, body')
      .stop()
      .animate(
        {
          scrollTop: $target.offset().top + 2,
        },
        500,
        'swing',
        function () {
          window.location.hash = target;
          $(document).on('scroll', onScroll);
        },
      );
  });
});

function onScroll(event) {
  var scrollPos = $(document).scrollTop();
  $('#anchorLinks a').each(function () {
    var currLink = $(this);
    var refElement = $(currLink.attr('href'));
    if (
      refElement.position().top <= scrollPos &&
      refElement.position().top + refElement.height() > scrollPos
    ) {
      $('#anchorLinks a').removeClass('active');
      currLink.addClass('active');
    } else {
      currLink.removeClass('active');
    }
  });
}

// FORM VALIDATION

$('form').ready(function () {
  // In-Line Validation
  $('#email').focusout(function () {
    var email = $('#email').val();
    function isValidEmailAddress(email) {
      var pattern =
        /^([a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+(\.[a-z\d!#$%&'*+\-\/=?^_`{|}~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+)*|"((([ \t]*\r\n)?[ \t]+)?([\x01-\x08\x0b\x0c\x0e-\x1f\x7f\x21\x23-\x5b\x5d-\x7e\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|\\[\x01-\x09\x0b\x0c\x0d-\x7f\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))*(([ \t]*\r\n)?[ \t]+)?")@(([a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\d\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.)+([a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]|[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF][a-z\d\-._~\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]*[a-z\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])\.?$/i;
      return pattern.test(email);
    }

    if (!isValidEmailAddress(email)) {
      $('.erroremail').css('display', 'block');
      $('#email').css('background-color', '#FF3F3F');
    } else {
      $('.erroremail').css('display', 'none');
      $('#email').css('background-color', '#FFF');
    }
  });

  $('#enquiry').focusout(function () {
    if ($('#enquiry').val() === '') {
      $('.errorenquiry').css('display', 'block');
      $('#enquiry').css('background-color', '#FF3F3F');
    } else {
      $('.errorenquiry').css('display', 'none');
      $('#enquiry').css('background-color', '#FFF');
    }
  });

  $('#message').focusout(function () {
    if ($('#message').val().length < 20) {
      $('.errorsubmit').css('display', 'block');
      $('#message').css('background-color', '#FF3F3F');
    } else {
      $('.errorsubmit').css('display', 'none');
      $('#message').css('background-color', '#FFF');
    }
  });

  // Validation

  $('#submit-button').click(function () {
    if ($('#message').val().length < 20) {
      // Repeats  check on Submission
      $('.errorsubmit').css('display', 'block'); // Shows In-Line Error for UX
      $('#message').css('background-color', '#FF3F3F'); //Shows In-Line Error for UX
      return false; // Disables Submit
    } else if ($('#enquiry').val() === '') {
      $('.errorenquiry').css('display', 'block');
      $('#enquiry').css('background-color', '#FF3F3F');
      return false;
    } else if ($('.erroremail').is(':visible') || $('#email').val() === '') {
      // Validates Email, did they trip inline validation, or did they skip it?
      $('.erroremail').css('display', 'block');
      $('#email').css('background-color', '#FF3F3F');
      return false;
    }
    // Checks to see if a bot filled in the hidden form that users cant see
    else if ($('.bots').val().length > 0) {
      return false;
    } else {
      return true;
    }
  });
}); // end ready

var _gsScope =
  'undefined' != typeof module && module.exports && 'undefined' != typeof global
    ? global
    : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
  'use strict';
  function a(a, b, c, d, e, f) {
    return (
      (c = (parseFloat(c || 0) - parseFloat(a || 0)) * e),
      (d = (parseFloat(d || 0) - parseFloat(b || 0)) * f),
      Math.sqrt(c * c + d * d)
    );
  }
  function b(a) {
    return (
      ('string' != typeof a && a.nodeType) ||
        ((a = _gsScope.TweenLite.selector(a)), a.length && (a = a[0])),
      a
    );
  }
  function c(a, b, c) {
    var d,
      e,
      f = a.indexOf(' ');
    return (
      -1 === f
        ? ((d = void 0 !== c ? c + '' : a), (e = a))
        : ((d = a.substr(0, f)), (e = a.substr(f + 1))),
      (d = -1 !== d.indexOf('%') ? (parseFloat(d) / 100) * b : parseFloat(d)),
      (e = -1 !== e.indexOf('%') ? (parseFloat(e) / 100) * b : parseFloat(e)),
      d > e ? [e, d] : [d, e]
    );
  }
  function d(c) {
    if (!c) return 0;
    c = b(c);
    var d,
      e,
      f,
      g,
      h,
      j,
      k,
      l = c.tagName.toLowerCase(),
      m = 1,
      n = 1;
    'non-scaling-stroke' === c.getAttribute('vector-effect') &&
      ((n = c.getScreenCTM()), (m = n.a), (n = n.d));
    try {
      e = c.getBBox();
    } catch (o) {}
    if (
      ((e && (e.width || e.height)) ||
        ('rect' !== l && 'circle' !== l && 'ellipse' !== l) ||
        ((e = {
          width: parseFloat(
            c.getAttribute(
              'rect' === l ? 'width' : 'circle' === l ? 'r' : 'rx',
            ),
          ),
          height: parseFloat(
            c.getAttribute(
              'rect' === l ? 'height' : 'circle' === l ? 'r' : 'ry',
            ),
          ),
        }),
        'rect' !== l && ((e.width *= 2), (e.height *= 2))),
      'path' === l)
    )
      (g = c.style.strokeDasharray),
        (c.style.strokeDasharray = 'none'),
        (d = c.getTotalLength() || 0),
        m !== n &&
          console.log(
            "Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled.",
          ),
        (d *= (m + n) / 2),
        (c.style.strokeDasharray = g);
    else if ('rect' === l) d = 2 * e.width * m + 2 * e.height * n;
    else if ('line' === l) d = a(e.x, e.y, e.x + e.width, e.y + e.height, m, n);
    else if ('polyline' === l || 'polygon' === l)
      for (
        f = c.getAttribute('points').match(i) || [],
          'polygon' === l && f.push(f[0], f[1]),
          d = 0,
          h = 2;
        h < f.length;
        h += 2
      )
        d += a(f[h - 2], f[h - 1], f[h], f[h + 1], m, n) || 0;
    else
      ('circle' === l || 'ellipse' === l) &&
        ((j = (e.width / 2) * m),
        (k = (e.height / 2) * n),
        (d = Math.PI * (3 * (j + k) - Math.sqrt((3 * j + k) * (j + 3 * k)))));
    return d || 0;
  }
  function e(a, c) {
    if (!a) return [0, 0];
    (a = b(a)), (c = c || d(a) + 1);
    var e = h(a),
      f = e.strokeDasharray || '',
      g = parseFloat(e.strokeDashoffset),
      i = f.indexOf(',');
    return (
      0 > i && (i = f.indexOf(' ')),
      (f = 0 > i ? c : parseFloat(f.substr(0, i)) || 1e-5),
      f > c && (f = c),
      [Math.max(0, -g), Math.max(0, f - g)]
    );
  }
  var f,
    g = _gsScope.document,
    h = g.defaultView ? g.defaultView.getComputedStyle : function () {},
    i = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
    j = -1 !== ((_gsScope.navigator || {}).userAgent || '').indexOf('Edge');
  (f = _gsScope._gsDefine.plugin({
    propName: 'drawSVG',
    API: 2,
    version: '0.1.5',
    global: !0,
    overwriteProps: ['drawSVG'],
    init: function (a, b, f, g) {
      if (!a.getBBox) return !1;
      var i,
        k,
        l,
        m,
        n = d(a) + 1;
      return (
        (this._style = a.style),
        'function' == typeof b && (b = b(g, a)),
        b === !0 || 'true' === b
          ? (b = '0 100%')
          : b
            ? -1 === (b + '').indexOf(' ') && (b = '0 ' + b)
            : (b = '0 0'),
        (i = e(a, n)),
        (k = c(b, n, i[0])),
        (this._length = n + 10),
        0 === i[0] && 0 === k[0]
          ? ((l = Math.max(1e-5, k[1] - n)),
            (this._dash = n + l),
            (this._offset = n - i[1] + l),
            this._addTween(
              this,
              '_offset',
              this._offset,
              n - k[1] + l,
              'drawSVG',
            ))
          : ((this._dash = i[1] - i[0] || 1e-6),
            (this._offset = -i[0]),
            this._addTween(
              this,
              '_dash',
              this._dash,
              k[1] - k[0] || 1e-5,
              'drawSVG',
            ),
            this._addTween(this, '_offset', this._offset, -k[0], 'drawSVG')),
        j &&
          ((m = h(a)),
          (k = m.strokeLinecap),
          'butt' !== k &&
            k !== m.strokeLinejoin &&
            ((k = parseFloat(m.strokeMiterlimit)),
            this._addTween(
              a.style,
              'strokeMiterlimit',
              k,
              k + 1e-4,
              'strokeMiterlimit',
            ))),
        !0
      );
    },
    set: function (a) {
      this._firstPT &&
        (this._super.setRatio.call(this, a),
        (this._style.strokeDashoffset = this._offset),
        1 === a || 0 === a
          ? (this._style.strokeDasharray =
              this._offset < 0.001 && this._length - this._dash <= 10
                ? 'none'
                : this._offset === this._dash
                  ? '0px, 999999px'
                  : this._dash + 'px,' + this._length + 'px')
          : (this._style.strokeDasharray =
              this._dash + 'px,' + this._length + 'px'));
    },
  })),
    (f.getLength = d),
    (f.getPosition = e);
}),
  _gsScope._gsDefine && _gsScope._gsQueue.pop()(),
  (function (a) {
    'use strict';
    var b = function () {
      return (_gsScope.GreenSockGlobals || _gsScope)[a];
    };
    'undefined' != typeof module && module.exports
      ? (require('../TweenLite.min.js'), (module.exports = b()))
      : 'function' == typeof define && define.amd && define(['TweenLite'], b);
  })('DrawSVGPlugin');
